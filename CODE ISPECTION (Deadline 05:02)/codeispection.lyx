#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{changepage}
\end_preamble
\use_default_options true
\begin_modules
logicalmkup
pdfform
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement !tph
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_title "Power Enjoy: Design Document"
\pdf_author "Niccolo' Raspa, Matteo Marinelli"
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip smallskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Apache Ofbiz 
\begin_inset Newline newline
\end_inset

Code Ispection Document
\end_layout

\begin_layout Author
Niccolo' Raspa, Matteo Marinelli
\end_layout

\begin_layout Standard
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename ../DD/images/polimi.png
	scale 60

\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Standard
\align center
Software Engineering 2 Course Project
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Apache OFBiz
\end_layout

\begin_layout Standard
The class to be inspected belongs to Apache OFBizÂ®, an open source product
 for the automation of enterprise processes that includes framework components
 and business applications for ERP (Enterprise Resource Planning), CRM (Customer
 Relationship Management), E-Business / E-Commerce, etc.
 
\end_layout

\begin_layout Standard
It provides a suite of applications that are useful to integrate and automate
 most business processes of an enterprise.
\end_layout

\begin_layout Subsection
Class Assigned
\end_layout

\begin_layout Standard
The assigned class is the following: 
\end_layout

\begin_layout Itemize
SolrProductSearch.java 
\end_layout

\begin_layout Standard
The class is located in the org.apache.ofbiz.solr package of the Apache OFBiz
 project.
 It belongs to the spcial purpose stack together with other secondary functions
 suchs as eBay Integration, Google Base Integration, Google Checkout Integration
, POS System, Project Management and Scrum Management) and it's devoted
 to search.
 
\end_layout

\begin_layout Standard
The solr component includes an OFBiz service-based wrapper layer to the
 Apache Solr webapp queries as well as the native Apache Solr web interface
 itself.
\end_layout

\begin_layout Subsection
Documentation
\end_layout

\begin_layout Itemize

\series bold
Apache Solr 
\series default
http://lucene.apache.org/solr/
\end_layout

\begin_layout Itemize

\series bold
Apache OfBiz 
\series default
https://ofbiz.apache.org/documentation.html
\end_layout

\begin_layout Itemize

\series bold
Integration of Solr in Ofbiz 
\series default
https://cwiki.apache.org/confluence/display/OFBIZ/Search+Integration
\end_layout

\begin_layout Itemize

\series bold
Solr Overview!! 
\series default
https://cwiki.apache.org/confluence/display/solr/Overview+of+Documents%2C+Fields%2
C+and+Schema+Design
\end_layout

\begin_layout Itemize

\series bold
Java Doc 
\series default
https://ci.apache.org/projects/ofbiz/site/javadocs/org/ofbiz/solr/SolrProductSearc
h.html
\end_layout

\begin_layout Itemize

\series bold
Java Doc Bis 
\series default
https://lucene.apache.org/solr/4_2_1/solr-solrj/org/apache/solr/common/SolrDocumen
t.html
\end_layout

\begin_layout Subsection
Apache Solr
\end_layout

\begin_layout Standard
This OFBiz component leverages Apache Solr indexing capabilities.
 Apache Solr is a fast open-source Java search server.
 Solr enables you to easily create search engines which searches websites,
 databases and files.
 Currently, the solr component focuses on Product data.
\end_layout

\begin_layout Subsubsection
Data Indexing
\end_layout

\begin_layout Standard
The solr component indexes data such as Products into the Apache Solr database
 using services defined in the file: servicesdef/solrservices.xml The initial
 indexing may need to be performed or scheduled manually, but subsequent
 indexing may be partially or fully automated, though automated methods
 are disabled by default and must be enabled.
\end_layout

\begin_layout Standard
There are two methods for indexing data:
\end_layout

\begin_layout Standard
\begin_inset Flex Code
status open

\begin_layout Plain Layout
* Index rebuilding service (rebuildSolrIndex):
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The rebuildSolrIndex is the most important data import service.
 It reindexes all OFBiz Products existing in the system into the solr index.
 rebuildSolrIndex MUST be run AT LEAST once after installation and also
 following any data load operation that loads new products.
\end_layout

\begin_layout Standard
Once the initial indexing has been performed, one can then use the Job Scheduler
 to invoke rebuildSolrIndex on a regular basis (every hour, every midnight,
 etc.) to update the Solr index.
\end_layout

\begin_layout Standard
\begin_inset Flex Code
status open

\begin_layout Plain Layout
* ECAs/SECAs (addToSolr, for Product data):
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Although the rebuildSolrIndex is always necessary for the initial data import,
 one may also use ECAs and SECAs to import subsequent data changes automatically
 at every individual data (e.g.
 Product) update instead of running rebuildSolrIndex periodically.
 This is done by defining ECAs or SECAs that trigger the addToSolr service.
\end_layout

\begin_layout Standard
The addToSolr service simply accepts a single "instance" parameter, a GenericVal
ue.
 At the time of this writing, any entity value having a valid "productId"
 field designating a Product value may be passed; this will trigger reindexing
 for the specific product.
\end_layout

\begin_layout Subsubsection
Data Querying
\end_layout

\begin_layout Standard
Solr queries can be done using two methods:
\end_layout

\begin_layout Standard

\series bold
* Solr OFBiz services:
\end_layout

\begin_layout Standard
Simply invoke (manually or in code) the query services found in the file:
 servicesdef/solrservices.xml These include solrProductsSearch, solrKeywordSearch
 and others.
 Note that in general, solr services can only successfully run in contexts
 where the solr webapp is loaded and accessible.
\end_layout

\begin_layout Standard

\series bold
* Solr native admin webapp interface:
\end_layout

\begin_layout Standard
One can also perform native Solr queries and diagnostics using the standard
 admin interface, accessible as described under Configuration.
 Please refer to the Apache Solr documentation for usage of this interface.
\end_layout

\begin_layout Subsection
Functional role of assigned set of classes
\end_layout

\begin_layout Standard

\series bold
* Adds product to solr, with product denoted by productId field in instance
 attribute
\end_layout

\begin_layout Standard
public static Map<String, Object> addToSolr(DispatchContext dctx, Map<String,
 Object> context) throws GenericEntityException { 
\end_layout

\begin_layout Standard

\series bold
* Adds product to solr index.
 
\end_layout

\begin_layout Standard
public static Map<String, Object> addToSolrIndex(DispatchContext dctx, Map<Strin
g, Object> context) throws GenericEntityException 
\end_layout

\begin_layout Standard

\series bold
* Adds a List of products to the solr index.
\end_layout

\begin_layout Standard
public static Map<String, Object> addListToSolrIndex(DispatchContext dctx,
 Map<String, Object> context) throws GenericEntityException 
\end_layout

\begin_layout Standard

\series bold
* Runs a query on the Solr Search Engine and returns the results.
\end_layout

\begin_layout Standard
public static Map<String, Object> runSolrQuery(DispatchContext dctx, Map<String,
 Object> context) 
\end_layout

\begin_layout Standard

\series bold
* Performs solr products search.
\end_layout

\begin_layout Standard
public static Map<String, Object> productsSearch(DispatchContext dctx, Map<Strin
g, Object> context) 
\end_layout

\begin_layout Standard

\series bold
* Performs keyword search.
\end_layout

\begin_layout Standard
public static Map<String, Object> keywordSearch(DispatchContext dctx, Map<String
, Object> context) 
\end_layout

\begin_layout Standard

\series bold
Rebuilds the solr index.
\end_layout

\begin_layout Standard
public static Map<String, Object> rebuildSolrIndex(DispatchContext dctx,
 Map<String, Object> context) throws GenericEntityException { 
\end_layout

\begin_layout Standard

\series bold
* Returns a map of the categories currently available under the root element.
 
\end_layout

\begin_layout Standard
public static Map<String, Object> getAvailableCategories(DispatchContext
 dctx, Map<String, Object> context) 
\end_layout

\begin_layout Standard

\series bold
* Return a map of the side deep categories.
 
\end_layout

\begin_layout Standard
public static Map<String, Object> getSideDeepCategories(DispatchContext
 dctx, Map<String, Object> context) 
\end_layout

\begin_layout Section
Code Inspection
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Section
Effort Spent
\end_layout

\begin_layout Standard
In this section you will include information about the number of hours each
 group member has worked towards the fulfillment of this deadline.
 
\end_layout

\end_body
\end_document
