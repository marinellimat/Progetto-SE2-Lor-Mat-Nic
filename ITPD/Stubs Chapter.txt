Program Stubs and Test Data Required

In order to perform integration testing without having developed the entire system first, we need to use stubs and drivers to simulate the software components that still don’t exist and test the others.

Data Access Driver: this testing module will invoke methods in order to test interaction between DBMSs and Application Server's bins. Since the Power Enjoy is structured in microservices, bin has access at most to on specific DBMS. This driver manages all the interaction of this kind, for all bins.


Reservation Service Driver: this testing module will invoke the methods visible to the Reservation Service subcomponent, in order to test its interaction with the Reservation database, the User service, the Car Service and the Payment Service components.

User Service Driver: this testing module will invoke the methods visible to the User Service subcomponent, in order to test its interaction with the User database, the Reservation service, the Location Service and the Payment Service components.

Car Service Driver: this testing module will invoke the methods visible to the Car Service subcomponent, in order to test its interaction with the Car database, the Reservation service, the Location Service and the Assistaance Service components.

Location Service Driver: this testing module will invoke the methods visible to the Location Service subcomponent, in order to test its interaction with the Location database, the User service and the Car Service.

Assistance Service Driver: this testing module will invoke the methods visible to the Assistance Service subcomponent, in order to test its interaction with the Car Service component.

Payment Service Driver: this testing module will invoke the methods visible to the Payment Service subcomponent, in order to test its interaction with the Payment database, the Reservation service and the User Service components.

Since we used a mixed approach, not purely bottom-up, stubs are necessary to emulate the presence of not yet completed components.
A test DBMS must be filled with random values in order to test properly the Software. Each entity must appear in the test DBMS following the same ER diagram designed in the Design Document. Could be usefull to insert values may cause exceptions, to check the behaviour of the system on limit situations.
Other stubs must reproduce the behaviour of external systems that interact with the Power Enjoy software. Must be emulated the communication between Payment System, Assistance System and Car On Board System with the respective bins.
The test must evaluate also the efficiency of the user actions. Will be usefull a Mock sender and receiver in order to collect all data of an immaginary user.
A set of datas choosen ad hoc (also not real ones) is necessary to verify the validity of the credential.