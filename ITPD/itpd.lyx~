#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{changepage}
\end_preamble
\use_default_options true
\begin_modules
logicalmkup
pdfform
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement !tph
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_title "Power Enjoy: Design Document"
\pdf_author "Niccolo' Raspa, Matteo Marinelli"
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Power EnJoy 
\begin_inset Newline newline
\end_inset

Integration Test Plan Document
\end_layout

\begin_layout Author
Niccolo' Raspa, Matteo Marinelli
\end_layout

\begin_layout Standard
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename ../DD/images/polimi.png
	scale 60

\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Standard
\align center
Software Engineering 2 Course Project
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section*
ASSIGNMENT INFO
\end_layout

\begin_layout Standard
The Integration Test Plan Document (ITPD) aims at describing how you plan
 to accomplish the integration test.
 This document is supposed to be written before the integration test really
 happens.
 Often it is written in parallel to the Design Document and takes the architectu
ral description of the software system as a starting point.
 This document needs to explain to the development team what to test, in
 which sequence, which tools are needed for testing (if any), and which
 stubs/drivers/oracles need to be developed.
 The structure we suggest for this document is the following (if you introduce
 changes to this structure, please provide a justification for this):
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Subsection
Revision History
\end_layout

\begin_layout Standard
Record all revision of the document 
\end_layout

\begin_layout Subsection
Purpose and Scope
\end_layout

\begin_layout Standard
State the purpose and scope of the document
\end_layout

\begin_layout Subsection
List of Definitions and Abbreviations
\end_layout

\begin_layout Subsection
List of Reference Documents
\end_layout

\begin_layout Standard
List all reference documents, for instance:
\end_layout

\begin_layout Itemize
Project description
\end_layout

\begin_layout Itemize
RASD
\end_layout

\begin_layout Itemize
DD
\end_layout

\begin_layout Itemize
Documentation of any tool you plan to use for testing 
\end_layout

\begin_layout Section
Integration Strategy
\end_layout

\begin_layout Subsection
Entry Criteria
\end_layout

\begin_layout Standard
Specify the criteria that must be met before integration testing of specific
 elements may begin (e.g., functions must have been unit tested).
\end_layout

\begin_layout Subsection
Elements to be Integrated
\end_layout

\begin_layout Standard
Identify the components to be integrated, refer to your design document
 to identify such components in a way that is consistent with your design.
\end_layout

\begin_layout Subsection
Integration Testing Strategy
\end_layout

\begin_layout Standard
Describe the integration testing approach (top-down, bottom-up, functional
 groupings, etc.) and the rationale for the choosing that approach.
\end_layout

\begin_layout Subsection
Sequence of Component/Function Integration
\end_layout

\begin_layout Standard
NOTE: The structure of this section may vary depending on the integration
 strategy you select in Section 2.3; use the structure proposed below as
 a non mandatory guide
\end_layout

\begin_layout Subsubsection
Software Integration Sequence
\end_layout

\begin_layout Standard
For each subsystem, identify the sequence in which the software components
 will be integrated within the subsystem; relate this sequence to any product
 features that are being built up.
\end_layout

\begin_layout Subsubsection
Subsystem Integration Sequence
\end_layout

\begin_layout Standard
Identify the order in which subsystems will be integrated; if you have a
 single subsystem, 2.4.1 and 2.4.2 are to be merged in a single section.
 You can refer to Section 2.2 of the test plan example [1] as an example
\end_layout

\begin_layout Section
Individual Steps and Test Description
\end_layout

\begin_layout Standard
For each step of the integration process above, describe the type of tests
 that will be used to verify that the elements integrated in this step perform
 as expected.
 Describe in general the expected results of the test set.
 You may refer to Chapter 3 and Chapter 4 of the test plan example [1] as
 an example of what we expect.
 (NOTE: This is not a detailed description of test protocols.
 Think of this as the test design phase.
 Specific protocols will be written to fulfill the goals of the tests in
 this section.
\end_layout

\begin_layout Section
Tools and Test Equipment Required
\end_layout

\begin_layout Standard
Identify all tools and test equipment needed to accomplish the integration.
 Refer to the tools presented during the lectures.
 Explain why and how you are going to use them.
 Note that you may also use manual testing for some part.
 Consider manual testing as one of the possible tools you have available.
\end_layout

\begin_layout Section
Program Stubs and Test Data Required
\end_layout

\begin_layout Standard
Based on the testing strategy and test design, identify any program stubs
 or special test data required for each integration step.
\end_layout

\begin_layout Section
Effort Spent
\end_layout

\begin_layout Standard
In this section you will include information about the number of hours each
 group member has worked towards the fulfillment of this deadline.
 
\end_layout

\end_body
\end_document
